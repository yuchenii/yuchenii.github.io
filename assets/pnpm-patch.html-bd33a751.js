import{_ as a,o as e,c as n,f as p}from"./app-0984bd77.js";const s="/assets/image-20240121-2349-00513-758adda1.png",c="/assets/image-20240122-0000-36083-d7fa92b2.png",t={},i=p(`<h1 id="pnpm-patch-修补第三方依赖" tabindex="-1"><a class="header-anchor" href="#pnpm-patch-修补第三方依赖" aria-hidden="true">#</a> pnpm patch 修补第三方依赖</h1><p>我们开发过程中常常会遇到第三方依赖有 bug 的情况，这时我们可以使用 pnpm patch 来打补丁修复。</p><h2 id="pnpm-patch" tabindex="-1"><a class="header-anchor" href="#pnpm-patch" aria-hidden="true">#</a> pnpm patch</h2><p>比如，在使用 element plus 时，发现了一个 bug。首先我们需要知道正在使用的 element plus 版本，这里以 2.3.4 为例, 然后使用如下命令</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">pnpm</span> patch element-plus@2.3.4
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这时会出现一个临时目录，该目录可以通过 <code>--edit-dir</code> 来指定。</p><figure><img src="`+s+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="pnpm-patch-commit" tabindex="-1"><a class="header-anchor" href="#pnpm-patch-commit" aria-hidden="true">#</a> pnpm patch-commit</h2><p>然后可以在这个目录下进行修改，修改完成后使用 <code>pnpm patch-commit xxx</code> 来提交修改内容， <code>xxx</code> 为<code>pnpm patch</code>命令生成的临时目录。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">pnpm</span> patch-commit <span class="token string">&#39;/private/var/folders/jk/p594c5rx703869x65cm6z4jw0000gn/T/db6b81df8ed3e3fa87216d5e0532a8dd&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>之后会在项目根目录下生成一个patches文件夹，里面是生成的patch文件。</p><figure><img src="`+c+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>同时会在<code>package.json</code>中添加一条记录</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>  <span class="token property">&quot;pnpm&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;patchedDependencies&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;element-plus@2.3.4&quot;</span><span class="token operator">:</span> <span class="token string">&quot;patches/element-plus@2.3.4.patch&quot;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="pnpm-patch-remove" tabindex="-1"><a class="header-anchor" href="#pnpm-patch-remove" aria-hidden="true">#</a> pnpm patch-remove</h2><p>如果作者修复了这个bug, 可以使用 <code>pnpm patch-remove</code> 来撤销修补。</p><blockquote><p>pnpm patch-remove 需要 pnpm 版本 &gt;= 8.5.0.</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">pnpm</span> patch-remove element-plus@2.3.4
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这时会删除patches文件夹下对应的patch文件和<code>package.json</code>中对应的记录。</p><h2 id="npm-yarn" tabindex="-1"><a class="header-anchor" href="#npm-yarn" aria-hidden="true">#</a> npm&amp;yarn</h2><ul><li>npm 可以使用 <code>patch-package</code> 包</li><li>yarn 可以使用 <code>yarn patch</code> 命令</li></ul>`,21),d=[i];function o(r,l){return e(),n("div",null,d)}const h=a(t,[["render",o],["__file","pnpm-patch.html.vue"]]);export{h as default};
